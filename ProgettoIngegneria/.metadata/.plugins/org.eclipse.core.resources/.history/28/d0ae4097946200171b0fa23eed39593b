package Progetto_Colognese_Rossini;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class Carrello {

	private String id;
	Connection conn;
	PreparedStatement ps;

	public Carrello(String idCliente) {
		try {
			Class.forName("org.postgresql.Driver");
			conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/ingegneria", "Ross", "");
			this.id = idCliente;
		} catch (Exception e) {
		}
	}

	public int getTotProdottiCarrello() throws SQLException {
		try {
			ps = conn.prepareStatement("SELECT COUNT(*) AS ct FROM inCarrello WHERE cliente = ?");
			ps.setString(1, id);
			ResultSet rs = ps.executeQuery();
			rs.next();
			return rs.getInt("ct");
		} catch (SQLException e) {
			return 0;
		}
	}

	public ResultSet getProdotti() {
		try {
			ps = conn.prepareStatement(
					"SELECT D.codice, D.titolo, D.prezzo, D.titolare, D.copertina FROM Disk D JOIN inCarrello C ON D.codice = C.disk WHERE C.cliente = ?");
			ps.setString(1, id);
			return ps.executeQuery();
		} catch (SQLException e) {
			return null;
		}
	}

	public void svuota() throws SQLException {
		try {
			ps = conn.prepareStatement("SELECT disk, quantità FROM inCarrello WHERE cliente = ?");
			ps.setString(1, id);
			ResultSet rs = ps.executeQuery();

			while (rs.next()) {
				ps = conn.prepareStatement("UPDATE Disk SET totMagazzino = totMagazzino + ? WHERE codice = ?");
				ps.setInt(1, rs.getInt(2));
				ps.setInt(2, rs.getInt(1));
				ps.executeUpdate();
			}

			ps = conn.prepareStatement("DELETE FROM inCarrello WHERE cliente = ?");
			ps.setString(1, id);
			ps.executeUpdate();

		} catch (SQLException e) {
		}
	}

	public void aggiungiProdotto(int prodotto, int quantità) {
		try {
			ps = conn.prepareStatement("UPDATE Disk SET totMagazzino = totMagazzino - ? WHERE codice = ?");
			ps.setInt(1, quantità);
			ps.setInt(2, prodotto);
			ps.executeUpdate();

			ps = conn.prepareStatement("INSERT INTO inCarrello (cliente, disk, quantità) VALUES(?, ?, ?)");
			ps.setString(1, id);
			ps.setInt(2, prodotto);
			ps.setInt(3, quantità);
			System.err.println("aggiungiProdotto andata a buon fine");
			ps.executeUpdate();
		} catch (SQLException e) {
		}
	}

	public void rimuoviProdotto(int prodotto, int quantità) {
		try {
			ps = conn.prepareStatement("UPDATE Disk SET totMagazzino = totMagazzino + ? WHERE codice = ?");
			ps.setInt(1, quantità);
			ps.setInt(2, prodotto);
			ps.executeUpdate();

			ps = conn.prepareStatement("DELETE FROM inCarrello WHERE cliente = ? AND disk = ?");
			ps.setString(1, id);
			ps.setInt(2, prodotto);
			ps.executeUpdate();
		} catch (SQLException e) {
		}
	}

	public void incrementaQuantità(int prodotto, int quantita) {
		try {
			ps = conn.prepareStatement("UPDATE Disk SET totMagazzino = totMagazzino - ? WHERE codice = ?");
			ps.setInt(1, quantita);
			ps.setInt(2, prodotto);
			ps.executeUpdate();

			ps = conn.prepareStatement("UPDATE inCarrello SET quantità = quantità + ? WHERE disk = ?");
			ps.setInt(1, quantita);
			ps.setInt(2, prodotto);
			ps.executeUpdate();
		} catch (SQLException e) {
		}
	}

	public void decrementaQuantità(int prodotto) {
		try {
			ps = conn.prepareStatement("UPDATE Disk SET totMagazzino = totMagazzino + 1 WHERE codice = ?");
			ps.setInt(1, prodotto);
			ps.executeUpdate();

			ps = conn.prepareStatement("UPDATE inCarrello SET quantità = quantità - 1 WHERE disk = ?");
			ps.setInt(1, prodotto);
			ps.executeUpdate();
		} catch (SQLException e) {
		}
	}
}
