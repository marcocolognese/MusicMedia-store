package Progetto_Colognese_Rossini;

import java.awt.BorderLayout;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;

public class AggiungiProdottoListener implements ActionListener{
	private static AggiungiProdotto aggiungiProdotto;
	private static HomePage homePage;
	public final String AGGIUNGI = "aggiungi";
	
	AggiungiProdottoListener(AggiungiProdotto aggiungiProdotto, HomePage homePage) {
		this.aggiungiProdotto = aggiungiProdotto;
		this.homePage = homePage;
	}

	public void actionPerformed(ActionEvent e) {
		String com = e.getActionCommand();
		switch (com) {
		case AGGIUNGI:
			try {
				Aggiungi();
			} catch (SQLException e1) {
			}
			break;
		default:
			break;
		}
	}

	private void Aggiungi() throws SQLException {
		if(aggiungiProdotto.getCodicetext().getText().trim().length() != 0 && 
				aggiungiProdotto.getTitolotext().getText().trim().length() != 0 &&
				aggiungiProdotto.getTitolipezzitext().getText().trim().length() != 0 &&
				aggiungiProdotto.getPrezzotext().getText().trim().length() != 0 &&
				aggiungiProdotto.getTitolaretext().getText().trim().length() != 0 &&
				aggiungiProdotto.getDescrizionetext().getText().trim().length() != 0 &&
				aggiungiProdotto.getGeneretext().getText().trim().length() != 0 &&
				aggiungiProdotto.getMusicistitext().getText().trim().length() != 0 &&
				aggiungiProdotto.getStrumentitext().getText().trim().length() != 0){
			if(aggiungiProdotto.getFototext().getText().trim().length() != 0){
				if(aggiungiProdotto.getPrezzotext().getText().trim().matches("[0-9]+") || aggiungiProdotto.getPrezzotext().getText().trim().matches("[0-9]+[,.]{1}[0-9]{2}")) {
					int flag = HomePage.getPersonaleAutorizzato().aggiungiProdotto(Integer.valueOf(aggiungiProdotto.getCodicetext().getText().trim()), aggiungiProdotto.getTitolotext().getText().trim(), aggiungiProdotto.getTitolipezzitext().getText().trim(), aggiungiProdotto.getFototext().getText().trim(), BigDecimal.valueOf(Double.valueOf(aggiungiProdotto.getPrezzotext().getText().trim().replace(',', '.'))), aggiungiProdotto.getTitolaretext().getText().trim(), aggiungiProdotto.getDescrizionetext().getText().trim(), aggiungiProdotto.getGeneretext().getText().trim(), aggiungiProdotto.getTipocombobox().getSelectedItem().toString(), aggiungiProdotto.getMusicistitext().getText().trim(), aggiungiProdotto.getStrumentitext().getText().trim(), Integer.valueOf(aggiungiProdotto.getQuantitaspinner().getValue().toString()));
					if( flag == 2){
						JOptionPane.showMessageDialog(null, "Il musicista inserito non è presente tra quelli del sistema.", "Attenzione!", JOptionPane.ERROR_MESSAGE, new ImageIcon(""));
						return;
					}
					if( flag == 3){
						JOptionPane.showMessageDialog(null, "Il codice deve essere univoco.", "Attenzione!", JOptionPane.ERROR_MESSAGE, new ImageIcon(""));
						return;
					}
				}
				else{
					JOptionPane.showMessageDialog(null, "Inserire un prezzo corretto.", "Attenzione!", JOptionPane.ERROR_MESSAGE, new ImageIcon(""));
					return;
				}
			}
			else{
				if(aggiungiProdotto.getPrezzotext().getText().trim().matches("[0-9]+") || aggiungiProdotto.getPrezzotext().getText().trim().matches("[0-9]+[,.]{1}[0-9]{2}")) {
					int flag = HomePage.getPersonaleAutorizzato().aggiungiProdotto(Integer.valueOf(aggiungiProdotto.getCodicetext().getText().trim()), aggiungiProdotto.getTitolotext().getText().trim(), aggiungiProdotto.getTitolipezzitext().getText().trim(), BigDecimal.valueOf(Double.valueOf(aggiungiProdotto.getPrezzotext().getText().trim().replace(',', '.'))), aggiungiProdotto.getTitolaretext().getText().trim(), aggiungiProdotto.getDescrizionetext().getText().trim(), aggiungiProdotto.getGeneretext().getText().trim(), aggiungiProdotto.getTipocombobox().getSelectedItem().toString(), aggiungiProdotto.getMusicistitext().getText().trim(), aggiungiProdotto.getStrumentitext().getText().trim(), Integer.valueOf(aggiungiProdotto.getQuantitaspinner().getValue().toString()));
					if( flag == 2){
						JOptionPane.showMessageDialog(null, "Il musicista inserito non è presente tra quelli del sistema.", "Attenzione!", JOptionPane.ERROR_MESSAGE, new ImageIcon(""));
						return;
					}
					if( flag == 3){
						JOptionPane.showMessageDialog(null, "Il codice deve essere univoco.", "Attenzione!", JOptionPane.ERROR_MESSAGE, new ImageIcon(""));
						return;
					}
				}
				else{
					JOptionPane.showMessageDialog(null, "Inserire un prezzo corretto.", "Attenzione!", JOptionPane.ERROR_MESSAGE, new ImageIcon(""));
					return;
				}
			}
		}
		else{
			JOptionPane.showMessageDialog(null, "Completare tutti i campi.", "Attenzione!", JOptionPane.ERROR_MESSAGE, new ImageIcon(""));
			return;
		}
		
		
		
		

		GestioneNegozio.setSinistra(new JPanel(new GridLayout(HomePage.getCatalogo().getTotProdottiCatalogo(), 1)));
		private static final JPanel centro = new JPanel(new GridLayout(HomePage.getCatalogo().getTotProdottiCatalogo(), 1));
		private static final JPanel destra = new JPanel(new GridLayout(HomePage.getCatalogo().getTotProdottiCatalogo(), 1));
		private static final JPanel[] destra1 = new JPanel[HomePage.getCatalogo().getTotProdottiCatalogo()];
		private static final JLabel[] immagine = new JLabel[HomePage.getCatalogo().getTotProdottiCatalogo()];
		private static final int[] idProdotto = new int[HomePage.getCatalogo().getTotProdottiCatalogo()];
		private static final JLabel[] info = new JLabel[HomePage.getCatalogo().getTotProdottiCatalogo()];
		private static final JLabel[] quantitaLabel = new JLabel[HomePage.getCatalogo().getTotProdottiCatalogo()];
		private static JSpinner[] quantita = new JSpinner[HomePage.getCatalogo().getTotProdottiCatalogo()];
		
		Disk disco = new Disk();
		ResultSet rs = HomePage.getCatalogo().getCatalogo();
		for(int i=0; i<HomePage.getCatalogo().getTotProdottiCatalogo(); i++){
			rs.next();
			GestioneNegozio.getIdprodotto()[i] = rs.getInt(1);
			GestioneNegozio.getDestra1()[i] = new JPanel(new GridBagLayout());
			GestioneNegozio.getImmagine()[i] = new JLabel();
			GestioneNegozio.getImmagine()[i].setIcon(new ImageIcon(new ImageIcon(rs.getString(5)).getImage().getScaledInstance(130,130, Image.SCALE_SMOOTH)));
			GestioneNegozio.getInfo()[i] = new JLabel("<HTML>&nbsp;TITOLO: " + rs.getString(2) + "<BR>&nbsp;ARTISTA: " + rs.getString(4) +" <BR>&nbsp;PREZZO: " + rs.getBigDecimal(3) + "€</HTML>");
			GestioneNegozio.getQuantitalabel()[i] = new JLabel("Quantità disponibile: ");
			GestioneNegozio.getQuantita()[i] = new JSpinner(new SpinnerNumberModel(disco.getScorte(rs.getInt(1)), 0, 99999, 1));
			GestioneNegozio.getSinistra().add(GestioneNegozio.getImmagine()[i], BorderLayout.WEST);
			GestioneNegozio.getCentro().add(GestioneNegozio.getInfo()[i], BorderLayout.CENTER);
			GestioneNegozio.getDestra1()[i].add(GestioneNegozio.getQuantitalabel()[i]);
			GestioneNegozio.getDestra1()[i].add(GestioneNegozio.getQuantita()[i]);
			GestioneNegozio.getDestra().add(GestioneNegozio.getDestra1()[i], BorderLayout.EAST);
		}
		GestioneNegozio.getCentropnl().add(GestioneNegozio.getSinistra(), BorderLayout.WEST);
		GestioneNegozio.getCentropnl().add(GestioneNegozio.getCentro(), BorderLayout.CENTER);
		GestioneNegozio.getCentropnl().add(GestioneNegozio.getDestra(), BorderLayout.EAST);
		
		
		
		
		aggiungiProdotto.dispose();
	}
}